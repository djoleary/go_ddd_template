# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"
dotenv:
  - .env
env:
  CGO_ENABLED: 0
  COMPOSE_FILE: build/docker-compose.yaml
  HOST_HTTP_PORT: 8080
  GOMEMLIMIT: 200MiB
tasks:
  default:
    desc: lists all tasks
    cmd: task --list-all
  git:hooks:
    desc: sets up the githooks for the project
    cmd: git config core.hooksPath .githooks
  go:build:
    desc: build all binarys
    cmd: go build -o="bin/" -v ./...
  go:test:
    desc: run go tests
    cmd: go test -v ./...
  go:test:coverage:
    desc: run go tests
    cmds:
      - cmd: go test -v  -coverprofile=tmp/cover.out ./...
      - cmd: go tool cover -html=tmp/cover.out -o=tmp/cover.html
      - cmd: xdg-open tmp/cover.html
  go:docs:
    desc: open autogenerated code documentation
    cmd: go tool pkgsite -open
  docker:build:
    desc: build docker container
    sources:
      - assets/**/*
      - build/**/*
      - cmd/**/*
      - internal/**/*
      - go.mod
      - go.sum
      - Taskfile.yaml
      - .env
    cmds:
      - cmd: docker compose config
      - cmd: docker compose build
  docker:up:
    desc: run docker container
    cmd: docker compose up -d
  docker:down:
    desc: run docker container
    cmd: docker compose down -v
  lint:
    desc: run various linters
    cmds:
      - cmd: golangci-lint version
      - cmd: golangci-lint run --dry-run
  lint:fix:
    desc: run various linters
    cmds:
      - cmd: golangci-lint version
      - cmd: golangci-lint run --fix
